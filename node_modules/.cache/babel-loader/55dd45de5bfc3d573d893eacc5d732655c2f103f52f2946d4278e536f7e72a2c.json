{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\n// @ is an alias to /src\nimport { RegisterApi, SendEmailCodeApi } from \"@/request/api\";\nimport { RsakeyApi } from \"../request/api\";\nwindow.οnlοad = function () {\n  // 要操作到的元素\n  // let login = document.getElementById('login');\n  // let register = document.getElementById('register');\n  // let form_box = document.getElementsByClassName('form-box')[0];\n  // let register_box = document.getElementsByClassName('register-box')[0];\n  // let login_box = document.getElementsByClassName('login-box')[0];\n  // 去注册按钮点击事件\n  register.addEventListener('click', function () {\n    form_box.style.transform = 'translateX(80%)';\n    login_box.classList.add('hidden');\n    register_box.classList.remove('hidden');\n  });\n  // 去登录按钮点击事件\n  login.addEventListener('click', function () {\n    form_box.style.transform = 'translateX(0%)';\n    register_box.classList.add('hidden');\n    login_box.classList.remove('hidden');\n  });\n};\nexport default {\n  name: 'register',\n  data: function data() {\n    //验证邮箱的规则\n    var checkEmail = function checkEmail(rules, value, cb) {\n      //验证邮箱的正则表达式\n      var regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\n      if (regEmail.test(value))\n        //合法的邮箱\n        return cb();\n      cb(new Error('请输入正确的邮箱'));\n    };\n    return {\n      loading_send: false,\n      loading_lo: false,\n      loading_re: false,\n      is_send: true,\n      show: 0,\n      timer: null,\n      count: \"\",\n      form: {\n        email: \"2571091074@qq.com\",\n        code: \"\",\n        pwd1: \"abcd\",\n        pwd2: \"abcd\"\n      },\n      rules: {\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        pwd: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    goLo: function goLo() {\n      var login = document.getElementById('login');\n      var register = document.getElementById('register');\n      var form_box = document.getElementsByClassName('form-box')[0];\n      var register_box = document.getElementsByClassName('register-box')[0];\n      var login_box = document.getElementsByClassName('login-box')[0];\n      form_box.style.transform = 'translateX(0%)';\n      register_box.classList.add('hidden');\n      login_box.classList.remove('hidden');\n    },\n    goRe: function goRe() {\n      var login = document.getElementById('login');\n      var register = document.getElementById('register');\n      var form_box = document.getElementsByClassName('form-box')[0];\n      var register_box = document.getElementsByClassName('register-box')[0];\n      var login_box = document.getElementsByClassName('login-box')[0];\n      form_box.style.transform = 'translateX(80%)';\n      login_box.classList.add('hidden');\n      register_box.classList.remove('hidden');\n    },\n    send_code: function send_code() {\n      var _this = this;\n      this.loading_send = true;\n      SendEmailCodeApi({\n        email: this.form.email\n      }).then(function (res) {\n        console.log(res);\n        if (res.code === 200) {\n          var times = 60;\n          if (!_this.timer) {\n            _this.count = times;\n            _this.show = 1;\n            _this.timer = setInterval(function () {\n              if (_this.count > 0 && _this.count <= times) {\n                _this.count--;\n              } else {\n                _this.show = 2;\n                clearInterval(_this.timer);\n                _this.timer = null;\n              }\n            }, 1000);\n          }\n          _this.$message({\n            massage: '验证码发送成功，五分钟内有效',\n            type: 'success'\n          });\n        }\n        _this.loading_send = false;\n      });\n    },\n    getKey: function getKey() {\n      RsakeyApi().then(function (res) {\n        console.log(res.data);\n      });\n      var key = res.data;\n    },\n    register: function register() {\n      if (this.form.email === '') {\n        this.$message.error('邮箱不能为空');\n      } else if (this.form.code === '') {\n        this.$message.error('验证码不能为空');\n      } else if (this.form.pwd1 === '') {\n        this.$message.error('密码不能为空');\n      } else if (this.form.pwd2 === '') {\n        this.$message.error('确认密码不能为空');\n      } else {\n        RegisterApi({\n          email: this.form.email,\n          code: this.form.code,\n          password: this.form.pwd1,\n          okpassword: this.form.pwd2\n        }).then(function (res) {\n          console.log(res);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["RegisterApi","SendEmailCodeApi","RsakeyApi","window","οnlοad","register","addEventListener","form_box","style","transform","login_box","classList","add","register_box","remove","login","name","data","checkEmail","rules","value","cb","regEmail","test","Error","loading_send","loading_lo","loading_re","is_send","show","timer","count","form","email","code","pwd1","pwd2","required","message","trigger","validator","pwd","methods","goLo","document","getElementById","getElementsByClassName","goRe","send_code","_this","then","res","console","log","times","setInterval","clearInterval","$message","massage","type","getKey","key","error","password","okpassword"],"sources":["src/views/login.vue"],"sourcesContent":["<template>\n    <div class=\"login\">\n        <div class=\"container\">\n            <div class=\"form-box\">\n                <!-- 注册表单 -->\n                <div class=\"register-box hidden\">\n                    <h1>register</h1>\n                  <div class=\"register_form\">\n                  <el-form :model=\"form\" :rules=\"rules\">\n                    <el-form-item>\n                      <input v-model=\"form.email\" type=\"text\" placeholder=\"邮箱\">\n                    </el-form-item>\n                    <el-form-item>\n                        <input v-model=\"form.code\" type=\"text\" placeholder=\"输入验证码\" >\n<!--                        <el-button id=\"word1\" :disabled=\"!show\" @click=\"getCode(formData)\">-->\n<!--                        <span v-show=\"show\">获取验证码</span>-->\n<!--                        <span v-show=\"!show\">{{count}}</span>-->\n                      <el-button id=\"word1\" type=\"primary\" @click=\"send_code\" v-loading=\"loading_send\" v-if=\"show === 0\">\n                        发送验证码</el-button>\n                      <el-button id=\"word1\" v-if=\"show === 1\" type=\"info\" plain disabled>已发送{{ count }}秒</el-button>\n                      <el-button id=\"word1\" type=\"primary\" @click=\"send_code\" v-loading=\"loading_send\" v-if=\"show === 2\">\n                        重新获取</el-button>\n                    </el-form-item>\n                    <el-form-item>\n                        <input v-model=\"form.pwd1\" type=\"password\" placeholder=\"密码\">\n                    </el-form-item>\n                    <el-form-item>\n                        <input v-model=\"form.pwd2\" type=\"password\" placeholder=\"确认密码\">\n                    </el-form-item>\n                    <el-form-item>\n                      <el-button class=\"word1\" @click=\"register()\" v-loading=\"loading_re\">注册</el-button>\n                    </el-form-item>\n                  </el-form>\n                  </div>\n                </div>\n                <!-- 登录 -->\n                <div class=\"login-box\">\n                    <h1>login</h1>\n                    <el-form>\n                      <el-form-item>\n                        <input type=\"text\" placeholder=\"用户名\">\n                      </el-form-item>\n                      <el-form-item>\n                        <input type=\"password\" placeholder=\"密码\">\n                      </el-form-item>\n                    <el-form-item>\n                      <button>登录</button>\n                    </el-form-item>\n                  </el-form>\n                </div>\n            </div>\n            <div class=\"con-box left\">\n                <h2>欢迎来到<span>Dynamic System</span></h2>\n                <img src=\"../assets/logo.png\" alt=\"\">\n                <p>已有账号</p>\n                <button id=\"login\" @click=\"goLo\">去登录</button>\n            </div>\n            <div class=\"con-box right\">\n                <h2>欢迎来到<span>Dynamic System</span></h2>\n                <img src=\"../assets/logo.png\" alt=\"\">\n                <p>没有账号？</p>\n                <button id=\"register\" @click=\"goRe\">去注册</button>\n            </div>\n        </div>\r\n\t\t<el-button @click=\"getKey\">获取公钥</el-button>\n    </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport {RegisterApi, SendEmailCodeApi} from \"@/request/api\";\nimport { RsakeyApi } from \"../request/api\";\n\nwindow.οnlοad = function () {\n\n    // 要操作到的元素\n    // let login = document.getElementById('login');\n    // let register = document.getElementById('register');\n    // let form_box = document.getElementsByClassName('form-box')[0];\n    // let register_box = document.getElementsByClassName('register-box')[0];\n    // let login_box = document.getElementsByClassName('login-box')[0];\n     // 去注册按钮点击事件\n     register.addEventListener('click', () => {\n         form_box.style.transform = 'translateX(80%)';\n         login_box.classList.add('hidden');\n         register_box.classList.remove('hidden');\n     })\n     // 去登录按钮点击事件\n    login.addEventListener('click', () => {\n         form_box.style.transform = 'translateX(0%)';\n         register_box.classList.add('hidden');\n        login_box.classList.remove('hidden');\n     })\n}\nexport default {\n    name: 'register',\n    data() {\n      //验证邮箱的规则\n      const checkEmail = (rules, value, cb)=>{\n            //验证邮箱的正则表达式\n            const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\n            if(regEmail.test(value))\n                //合法的邮箱\n              return cb()\n            cb(new Error('请输入正确的邮箱'))\n          }\n        return {\n            loading_send: false,\n            loading_lo: false,\n            loading_re: false,\n            is_send: true,\n            show: 0,\n            timer: null,\n            count: \"\",\n            form: {\n                email: \"2571091074@qq.com\",\n                code:\"\",\n                pwd1: \"abcd\",\n                pwd2:\"abcd\"\n            },\n            rules: {\n                email: [\n                  {\n                    required:true ,message:'请输入邮箱', trigger:'blur'\n                  },{\n                  validator:checkEmail,trigger: 'blur'\n                  }\n                ],\n                pwd: [\n                    { required: true, message: '请输入密码', trigger: 'blur' }\n                ],\n            }\n        }\n    },\n    methods: {\n        goLo() {\n            let login = document.getElementById('login');\n            let register = document.getElementById('register');\n            let form_box = document.getElementsByClassName('form-box')[0];\n            let register_box = document.getElementsByClassName('register-box')[0];\n            let login_box = document.getElementsByClassName('login-box')[0];\n            form_box.style.transform = 'translateX(0%)';\n            register_box.classList.add('hidden');\n            login_box.classList.remove('hidden');\n        },\n\n        goRe() {\n            let login = document.getElementById('login');\n            let register = document.getElementById('register');\n            let form_box = document.getElementsByClassName('form-box')[0];\n            let register_box = document.getElementsByClassName('register-box')[0];\n            let login_box = document.getElementsByClassName('login-box')[0];\n            form_box.style.transform = 'translateX(80%)';\n            login_box.classList.add('hidden');\n            register_box.classList.remove('hidden');\n        },\n      send_code(){\n          this.loading_send=true;\n          SendEmailCodeApi({\n            email:this.form.email\n          }).then(res=>{\n            console.log(res);\n            if(res.code===200){\n              const times = 60;\n              if(!this.timer){\n                this.count=times;\n                this.show=1;\n                this.timer=setInterval(()=>{\n                  if(this.count>0&&this.count<=times){\n                    this.count--;\n                  }else{\n                    this.show = 2;\n                    clearInterval(this.timer);\n                    this.timer=null;\n                  }\n                },1000)\n              }\n              this.$message({\n                massage:'验证码发送成功，五分钟内有效',\n                type:'success'\n              });\n            }\n            this.loading_send=false;\n          })\n        },\r\n\t\tgetKey(){\r\n\t\t\tRsakeyApi().then(res=>{\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\tconst key = res.data;\r\n\t\t},\n      register() {\n        if(this.form.email===''){\n          this.$message.error('邮箱不能为空');\n        }else if(this.form.code===''){\n          this.$message.error('验证码不能为空');\n        }else if(this.form.pwd1===''){\n          this.$message.error('密码不能为空');\n        }else if(this.form.pwd2===''){\n          this.$message.error('确认密码不能为空');\n        }else{\n          RegisterApi({\n            email:this.form.email,\n            code:this.form.code,\n            password:this.form.pwd1,\n            okpassword:this.form.pwd2\n          }).then(res=>{\n            console.log(res);\n          })\n        }\n      }\n    },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.login {\n    /* 100%窗口高度 */\n    height: 100vh;\n    /* 弹性布局 水平+垂直居中 */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* 渐变背景 */\n    background: linear-gradient(200deg, #a14c59, #4778c2);\n     //容器的样式\n    .container {\n      background-color: #4871aa;\n      width: 650px;\n      height: 415px;\n      border-radius: 5px;\n      /* 阴影 */\n      box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n      /* 相对定位 */\n      position: relative;\n        //注册和登录表单的样式\n        .form-box {\n          /* 绝对定位 */\n          position: absolute;\n          top: -20%;\n          left: 5%;\n          background-color: #9e66a8;\n          width: 320px;\n          height: 550px;\n          border-radius: 5px;\n          box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);\n          display: inline-flex;\n          justify-content: center;\n          align-items: center;\n          z-index: 2;\n          /* 动画过渡 加速后减速 */\n          transition: 0.5s ease-in-out;\n        }\n      .el-form-item{\n        margin-bottom: 0px;\n      }\n\n  }\n}\n//注册盒子和登录盒子的样式\n.register-box,\n.login-box {\n    /* 弹性布局 垂直排列 */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n}\n\n.hidden {\n    display: none;\n    transition: 0.5s;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 25px;\n    /* 大写 */\n    text-transform: uppercase;\n    color: #fff;\n    /* 字间距 */\n    letter-spacing: 5px;\n}\n//登陆盒子输入框的样式\n.login-box input {\n    background-color: transparent;\n    width: 85%;\n    color: #e0a5a5;\n    border: none;\n    /* 下边框样式 */\n    border-bottom: 1px solid rgba(45, 18, 18, 0.4);\n    padding: 10px 0;\n    text-indent: 10px;\n    margin: 8px 0;\n    font-size: 14px;\n    letter-spacing: 2px;\n}\n\n.register-box input {\n  background-color: transparent;\n  width: 55%;\n  color: #e89292;\n  border: none;\n  /* 下边框样式 */\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n  padding: 10px 0;\n  text-indent: 10px;\n  margin: 8px 0;\n  font-size: 14px;\n  letter-spacing: 2px;\n}\ninput::placeholder {\n    color: #fff;\n}\n\ninput:focus {\n    color: #dcb5e3;\n    outline: none;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n    transition: 0.5s;\n}\n\ninput:focus::placeholder {\n    opacity: 0;\n}\n\n//盒子内按钮的样式\n.form-box button {\n    position: relative;\n    width: 85%;\n    margin-top: 35px;\n    background-color: #c4b2b2;\n    outline: none;\n    border-radius: 8px;\n    padding: 13px;\n    color: #a262ad;\n    letter-spacing: 2px;\n    border: none;\n    cursor: pointer;\n}\n\n#word1{\n  position: relative;\n  width: 45%;\n  margin-top: 16px;\n  background-color: #afc8d0;\n  outline: none;\n  border-radius: 8px;\n  padding: 13px;\n  color: #a262ad;\n  letter-spacing: 2px;\n  border: none;\n  cursor: pointer;\n}\n\n.form-box button:hover {\n    background-color: #a262ad;\n    color: #f6f6f6;\n    transition: background-color 0.5s ease;\n}\n\n.con-box {\n    width: 50%;\n    /* 弹性布局 垂直排列 居中 */\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    /* 绝对定位 居中 */\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n.con-box.left {\n    left: -2%;\n}\n\n.con-box.right {\n    right: -2%;\n}\n\n.con-box h2 {\n    color: #8e9aaf;\n    font-size: 25px;\n    font-weight: bold;\n    letter-spacing: 3px;\n    text-align: center;\n    margin-bottom: 4px;\n}\n\n.con-box p {\n    font-size: 12px;\n    letter-spacing: 2px;\n    color: #8e9aaf;\n    text-align: center;\n}\n\n.con-box span {\n    color: #d3b7d8;\n}\n\n.con-box img {\n    width: 150px;\n    height: 150px;\n    opacity: 0.9;\n    margin: 40px 0;\n}\n\n.con-box button {\n    margin-top: 3%;\n    background-color: #eea2a2;\n    color: #a262ad;\n    border: 1px solid #d3b7d8;\n    padding: 6px 10px;\n    border-radius: 5px;\n    letter-spacing: 1px;\n    outline: none;\n    cursor: pointer;\n}\n\n.con-box button:hover {\n    background-color: #d3b7d8;\n    color: #fff;\n}\n.word{\n  width: 70%;\n  margin-top: 35px;\n  background-color: #ffffff;\n  outline: none;\n  border-radius: 8px;\n  padding: 13px;\n  color: #a262ad;\n  letter-spacing: 2px;\n  border: none;\n  cursor: pointer;\n}\nimg{\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #eee;\n}\n</style>\n"],"mappings":";;;;;AAqEA;AACA,SAAAA,WAAA,EAAAC,gBAAA;AACA,SAAAC,SAAA;AAEAC,MAAA,CAAAC,MAAA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAA,CAAAC,gBAAA;IACAC,QAAA,CAAAC,KAAA,CAAAC,SAAA;IACAC,SAAA,CAAAC,SAAA,CAAAC,GAAA;IACAC,YAAA,CAAAF,SAAA,CAAAG,MAAA;EACA;EACA;EACAC,KAAA,CAAAT,gBAAA;IACAC,QAAA,CAAAC,KAAA,CAAAC,SAAA;IACAI,YAAA,CAAAF,SAAA,CAAAC,GAAA;IACAF,SAAA,CAAAC,SAAA,CAAAG,MAAA;EACA;AACA;AACA;EACAE,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;IACA,IAAAC,UAAA,YAAAA,WAAAC,KAAA,EAAAC,KAAA,EAAAC,EAAA;MACA;MACA,IAAAC,QAAA;MACA,IAAAA,QAAA,CAAAC,IAAA,CAAAH,KAAA;QACA;QACA,OAAAC,EAAA;MACAA,EAAA,KAAAG,KAAA;IACA;IACA;MACAC,YAAA;MACAC,UAAA;MACAC,UAAA;MACAC,OAAA;MACAC,IAAA;MACAC,KAAA;MACAC,KAAA;MACAC,IAAA;QACAC,KAAA;QACAC,IAAA;QACAC,IAAA;QACAC,IAAA;MACA;MACAjB,KAAA;QACAc,KAAA,GACA;UACAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QACA;UACAC,SAAA,EAAAtB,UAAA;UAAAqB,OAAA;QACA,EACA;QACAE,GAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,IAAA,WAAAA,KAAA;MACA,IAAA5B,KAAA,GAAA6B,QAAA,CAAAC,cAAA;MACA,IAAAxC,QAAA,GAAAuC,QAAA,CAAAC,cAAA;MACA,IAAAtC,QAAA,GAAAqC,QAAA,CAAAE,sBAAA;MACA,IAAAjC,YAAA,GAAA+B,QAAA,CAAAE,sBAAA;MACA,IAAApC,SAAA,GAAAkC,QAAA,CAAAE,sBAAA;MACAvC,QAAA,CAAAC,KAAA,CAAAC,SAAA;MACAI,YAAA,CAAAF,SAAA,CAAAC,GAAA;MACAF,SAAA,CAAAC,SAAA,CAAAG,MAAA;IACA;IAEAiC,IAAA,WAAAA,KAAA;MACA,IAAAhC,KAAA,GAAA6B,QAAA,CAAAC,cAAA;MACA,IAAAxC,QAAA,GAAAuC,QAAA,CAAAC,cAAA;MACA,IAAAtC,QAAA,GAAAqC,QAAA,CAAAE,sBAAA;MACA,IAAAjC,YAAA,GAAA+B,QAAA,CAAAE,sBAAA;MACA,IAAApC,SAAA,GAAAkC,QAAA,CAAAE,sBAAA;MACAvC,QAAA,CAAAC,KAAA,CAAAC,SAAA;MACAC,SAAA,CAAAC,SAAA,CAAAC,GAAA;MACAC,YAAA,CAAAF,SAAA,CAAAG,MAAA;IACA;IACAkC,SAAA,WAAAA,UAAA;MAAA,IAAAC,KAAA;MACA,KAAAxB,YAAA;MACAxB,gBAAA;QACAgC,KAAA,OAAAD,IAAA,CAAAC;MACA,GAAAiB,IAAA,WAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,IAAAA,GAAA,CAAAjB,IAAA;UACA,IAAAoB,KAAA;UACA,KAAAL,KAAA,CAAAnB,KAAA;YACAmB,KAAA,CAAAlB,KAAA,GAAAuB,KAAA;YACAL,KAAA,CAAApB,IAAA;YACAoB,KAAA,CAAAnB,KAAA,GAAAyB,WAAA;cACA,IAAAN,KAAA,CAAAlB,KAAA,QAAAkB,KAAA,CAAAlB,KAAA,IAAAuB,KAAA;gBACAL,KAAA,CAAAlB,KAAA;cACA;gBACAkB,KAAA,CAAApB,IAAA;gBACA2B,aAAA,CAAAP,KAAA,CAAAnB,KAAA;gBACAmB,KAAA,CAAAnB,KAAA;cACA;YACA;UACA;UACAmB,KAAA,CAAAQ,QAAA;YACAC,OAAA;YACAC,IAAA;UACA;QACA;QACAV,KAAA,CAAAxB,YAAA;MACA;IACA;IACAmC,MAAA,WAAAA,OAAA;MACA1D,SAAA,GAAAgD,IAAA,WAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAAlC,IAAA;MACA;MACA,IAAA4C,GAAA,GAAAV,GAAA,CAAAlC,IAAA;IACA;IACAZ,QAAA,WAAAA,SAAA;MACA,SAAA2B,IAAA,CAAAC,KAAA;QACA,KAAAwB,QAAA,CAAAK,KAAA;MACA,gBAAA9B,IAAA,CAAAE,IAAA;QACA,KAAAuB,QAAA,CAAAK,KAAA;MACA,gBAAA9B,IAAA,CAAAG,IAAA;QACA,KAAAsB,QAAA,CAAAK,KAAA;MACA,gBAAA9B,IAAA,CAAAI,IAAA;QACA,KAAAqB,QAAA,CAAAK,KAAA;MACA;QACA9D,WAAA;UACAiC,KAAA,OAAAD,IAAA,CAAAC,KAAA;UACAC,IAAA,OAAAF,IAAA,CAAAE,IAAA;UACA6B,QAAA,OAAA/B,IAAA,CAAAG,IAAA;UACA6B,UAAA,OAAAhC,IAAA,CAAAI;QACA,GAAAc,IAAA,WAAAC,GAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}